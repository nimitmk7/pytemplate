
# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/executor-intro/ & https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      # Specify the version you desire here
      # See: https://circleci.com/developer/images/image/cimg/base
      - image: cimg/python:3.12

    # Add steps to the job
    # See: https://circleci.com/docs/jobs-steps/#steps-overview & https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"
  test:
    docker:
      - image: cimg/python:3.12
    # Set PYTHONPATH to the repository root so that the src package is recognized
    environment:
      PYTHONPATH: .
    steps:
      - checkout
      - run:
          name: "Run tests"
          command: "echo Running tests..."
      - run:
          name: Installing UV
          command: curl -LsSf https://astral.sh/uv/install.sh | sh
      - run:
          name: Create virtual environment
          command: uv venv .venv
      - run:
          name: Install dependencies and run checks
          command: |
            source .venv/bin/activate
            uv sync
            uvx ruff check .
            mkdir -p test-results
            coverage run -m pytest tests/ --junitxml=test-results/junit.xml
            coverage report
            coverage xml
            coverage html
      - run:
          name: Run Static Analysis (mypy)
          command: |
            source .venv/bin/activate
            mypy --strict src/
      - run:
          name: Enforce Coverage Threshold
          command: |
            source .venv/bin/activate
            coverage report --fail-under=90
      - run:
          name: Run nose2 Tests (Extra Credit)
          command: |
            source .venv/bin/activate
            uv pip install nose2
            nose2 --with-coverage
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: htmlcov
      - store_artifacts:
          path: coverage.xml

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/workflows/ & https://circleci.com/docs/configuration-reference/#workflows
workflows:
  say-hello-workflow: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - test
